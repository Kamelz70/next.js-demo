{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Personal Projects\\\\React\\\\React-Course-Code\\\\01-starting-project 17 (Next.js)\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React from \"react\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nexport default function MeetupDetailsPage(props) {\n  const {\n    id,\n    title,\n    image,\n    address,\n    description\n  } = props.meetup;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"address\", {\n      children: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\nexport async function getStaticPaths() {\n  const uri = \"mongodb+srv://kamel:kamel123@cluster0.gs4eovp.mongodb.net/meetups?retryWrites=true&w=majority\"; // Create a MongoClient with a MongoClientOptions object to set the Stable API version\n\n  const client = new MongoClient(uri, {\n    serverApi: {\n      version: \"1\",\n      strict: true,\n      deprecationErrors: true\n    }\n  });\n  await client.connect();\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const result = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  const meetupIds = result.map(meetup => {\n    return {\n      params: {\n        meetupId: meetup._id\n      }\n    };\n  });\n  return {\n    fallback: true,\n    paths: meetupIds\n  };\n}\nexport async function getStaticProps(context) {\n  const {\n    meetupId\n  } = context.params;\n  const uri = \"mongodb+srv://kamel:kamel123@cluster0.gs4eovp.mongodb.net/meetups?retryWrites=true&w=majority\"; // Create a MongoClient with a MongoClientOptions object to set the Stable API version\n\n  const client = new MongoClient(uri, {\n    serverApi: {\n      version: \"1\",\n      strict: true,\n      deprecationErrors: true\n    }\n  });\n  await client.connect();\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const result = await meetupCollection.find({\n    _id: ObjectId(meetupId)\n  }, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    props: {\n      meetup: {\n        id: meetupId,\n        title: \"A first meetup\",\n        image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1200px-Stadtbild_M%C3%BCnchen.jpg?20130611211153\",\n        address: \"SomeAdd\",\n        description: \"A second meetup\"\n      }\n    }\n  };\n}","map":{"version":3,"sources":["D:/Personal Projects/React/React-Course-Code/01-starting-project 17 (Next.js)/pages/[meetupId]/index.js"],"names":["React","MongoClient","ObjectId","MeetupDetailsPage","props","id","title","image","address","description","meetup","getStaticPaths","uri","client","serverApi","version","strict","deprecationErrors","connect","db","meetupCollection","collection","result","find","_id","toArray","close","meetupIds","map","params","meetupId","fallback","paths","getStaticProps","context"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nexport default function MeetupDetailsPage(props) {\r\n  const { id, title, image, address, description } = props.meetup;\r\n  return (\r\n    <>\r\n      <h1>{title}</h1>\r\n      <h1>{id}</h1>\r\n\r\n      <img src={image} alt=\"\" />\r\n      <address>{address}</address>\r\n      <h2>{description}</h2>\r\n    </>\r\n  );\r\n}\r\nexport async function getStaticPaths() {\r\n  const uri =\r\n    \"mongodb+srv://kamel:kamel123@cluster0.gs4eovp.mongodb.net/meetups?retryWrites=true&w=majority\";\r\n  // Create a MongoClient with a MongoClientOptions object to set the Stable API version\r\n  const client = new MongoClient(uri, {\r\n    serverApi: {\r\n      version: \"1\",\r\n      strict: true,\r\n      deprecationErrors: true,\r\n    },\r\n  });\r\n  await client.connect();\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n  const result = await meetupCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  const meetupIds = result.map((meetup) => {\r\n    return {\r\n      params: {\r\n        meetupId: meetup._id,\r\n      },\r\n    };\r\n  });\r\n\r\n  return {\r\n    fallback: true,\r\n    paths: meetupIds,\r\n  };\r\n}\r\nexport async function getStaticProps(context) {\r\n  const { meetupId } = context.params;\r\n\r\n  const uri =\r\n    \"mongodb+srv://kamel:kamel123@cluster0.gs4eovp.mongodb.net/meetups?retryWrites=true&w=majority\";\r\n  // Create a MongoClient with a MongoClientOptions object to set the Stable API version\r\n  const client = new MongoClient(uri, {\r\n    serverApi: {\r\n      version: \"1\",\r\n      strict: true,\r\n      deprecationErrors: true,\r\n    },\r\n  });\r\n  await client.connect();\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n  const result = await meetupCollection\r\n    .find({ _id: ObjectId(meetupId) }, { _id: 1 })\r\n    .toArray();\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetup: {\r\n        id: meetupId,\r\n        title: \"A first meetup\",\r\n        image:\r\n          \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1200px-Stadtbild_M%C3%BCnchen.jpg?20130611211153\",\r\n        address: \"SomeAdd\",\r\n        description: \"A second meetup\",\r\n      },\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}