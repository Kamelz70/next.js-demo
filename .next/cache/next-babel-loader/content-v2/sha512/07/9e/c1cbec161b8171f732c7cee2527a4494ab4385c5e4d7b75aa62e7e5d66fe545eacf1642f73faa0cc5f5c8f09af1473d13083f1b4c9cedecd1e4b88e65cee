{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Personal Projects\\\\React\\\\React-Course-Code\\\\01-starting-project 17 (Next.js)\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React from \"react\";\nexport var __N_SSG = true;\nexport default function MeetupDetailsPage(props) {\n  var _props$meetup = props.meetup,\n      id = _props$meetup.id,\n      title = _props$meetup.title,\n      image = _props$meetup.image,\n      address = _props$meetup.address,\n      description = _props$meetup.description;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"address\", {\n      children: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = MeetupDetailsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetailsPage\");","map":{"version":3,"sources":["D:/Personal Projects/React/React-Course-Code/01-starting-project 17 (Next.js)/pages/[meetupId]/index.js"],"names":["React","MeetupDetailsPage","props","meetup","id","title","image","address","description"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA,sBACIA,KAAK,CAACC,MADV;AAAA,MACvCC,EADuC,iBACvCA,EADuC;AAAA,MACnCC,KADmC,iBACnCA,KADmC;AAAA,MAC5BC,KAD4B,iBAC5BA,KAD4B;AAAA,MACrBC,OADqB,iBACrBA,OADqB;AAAA,MACZC,WADY,iBACZA,WADY;AAE/C,sBACE;AAAA,4BACE;AAAA,gBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAK,MAAA,GAAG,EAAEE,KAAV;AAAiB,MAAA,GAAG,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,gBAAUC;AAAV;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAUD;KAZuBP,iB","sourcesContent":["import React from \"react\";\r\n\r\nexport default function MeetupDetailsPage(props) {\r\n  const { id, title, image, address, description } = props.meetup;\r\n  return (\r\n    <>\r\n      <h1>{title}</h1>\r\n      <h1>{id}</h1>\r\n\r\n      <img src={image} alt=\"\" />\r\n      <address>{address}</address>\r\n      <h2>{description}</h2>\r\n    </>\r\n  );\r\n}\r\nexport async function getStaticPaths() {\r\n  const uri =\r\n    \"mongodb+srv://kamel:kamel123@cluster0.gs4eovp.mongodb.net/meetups?retryWrites=true&w=majority\";\r\n  // Create a MongoClient with a MongoClientOptions object to set the Stable API version\r\n  const client = new MongoClient(uri, {\r\n    serverApi: {\r\n      version: \"1\",\r\n      strict: true,\r\n      deprecationErrors: true,\r\n    },\r\n  });\r\n  await client.connect();\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n  const result = await meetupCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  const meetupIds = result.map((meetup) => {\r\n    return {\r\n      params: {\r\n        meetupId: meetup._id,\r\n      },\r\n    };\r\n  });\r\n\r\n  return {\r\n    fallback: true,\r\n    paths: meetupIds,\r\n  };\r\n}\r\nexport async function getStaticProps(context) {\r\n  const { meetupId } = context.params;\r\n\r\n  const uri =\r\n    \"mongodb+srv://kamel:kamel123@cluster0.gs4eovp.mongodb.net/meetups?retryWrites=true&w=majority\";\r\n  // Create a MongoClient with a MongoClientOptions object to set the Stable API version\r\n  const client = new MongoClient(uri, {\r\n    serverApi: {\r\n      version: \"1\",\r\n      strict: true,\r\n      deprecationErrors: true,\r\n    },\r\n  });\r\n  await client.connect();\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n  const result = await meetupCollection\r\n    .find({ _id: ObjectId(meetupId) }, { _id: 1 })\r\n    .toArray();\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetup: {\r\n        id: meetupId,\r\n        title: \"A first meetup\",\r\n        image:\r\n          \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1200px-Stadtbild_M%C3%BCnchen.jpg?20130611211153\",\r\n        address: \"SomeAdd\",\r\n        description: \"A second meetup\",\r\n      },\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}