{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Personal Projects\\\\React\\\\React-Course-Code\\\\01-starting-project 17 (Next.js)\\\\pages\\\\[meetupId]\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nexport default function MeetupDetailsPage(props) {\n  const {\n    id,\n    title,\n    image,\n    address,\n    description\n  } = props.meetup;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"address\", {\n      children: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\nexport async function getStaticPaths() {\n  const uri = \"mongodb+srv://kamel:kamel123@cluster0.gs4eovp.mongodb.net/meetups?retryWrites=true&w=majority\"; // Create a MongoClient with a MongoClientOptions object to set the Stable API version\n\n  const client = new MongoClient(uri, {\n    serverApi: {\n      version: \"1\",\n      strict: true,\n      deprecationErrors: true\n    }\n  });\n  await client.connect();\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const result = await meetupCollection.find({}, {\n    projection: {\n      _id: 1\n    }\n  }).toArray();\n  client.close();\n  const meetupIds = result.map(meetup => {\n    return {\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    };\n  });\n  return {\n    fallback: true,\n    paths: meetupIds\n  };\n}\nexport async function getStaticProps(context) {\n  const {\n    meetupId\n  } = context.params;\n  const uri = \"mongodb+srv://kamel:kamel123@cluster0.gs4eovp.mongodb.net/meetups?retryWrites=true&w=majority\"; // Create a MongoClient with a MongoClientOptions object to set the Stable API version\n\n  const client = new MongoClient(uri, {\n    serverApi: {\n      version: \"1\",\n      strict: true,\n      deprecationErrors: true\n    }\n  });\n  await client.connect();\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const result = await meetupCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetup: _objectSpread(_objectSpread({}, result), {}, {\n        id: result._id.toString(),\n        _id: null\n      })\n    }\n  };\n}","map":{"version":3,"sources":["D:/Personal Projects/React/React-Course-Code/01-starting-project 17 (Next.js)/pages/[meetupId]/index.js"],"names":["React","MongoClient","ObjectId","MeetupDetailsPage","props","id","title","image","address","description","meetup","getStaticPaths","uri","client","serverApi","version","strict","deprecationErrors","connect","db","meetupCollection","collection","result","find","projection","_id","toArray","close","meetupIds","map","params","meetupId","toString","fallback","paths","getStaticProps","context","findOne"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nexport default function MeetupDetailsPage(props) {\r\n  const { id, title, image, address, description } = props.meetup;\r\n  return (\r\n    <>\r\n      <h1>{title}</h1>\r\n      <h1>{id}</h1>\r\n\r\n      <img src={image} alt=\"\" />\r\n      <address>{address}</address>\r\n      <h2>{description}</h2>\r\n    </>\r\n  );\r\n}\r\nexport async function getStaticPaths() {\r\n  const uri =\r\n    \"mongodb+srv://kamel:kamel123@cluster0.gs4eovp.mongodb.net/meetups?retryWrites=true&w=majority\";\r\n  // Create a MongoClient with a MongoClientOptions object to set the Stable API version\r\n  const client = new MongoClient(uri, {\r\n    serverApi: {\r\n      version: \"1\",\r\n      strict: true,\r\n      deprecationErrors: true,\r\n    },\r\n  });\r\n  await client.connect();\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n  const result = await meetupCollection\r\n    .find({}, { projection: { _id: 1 } })\r\n    .toArray();\r\n  client.close();\r\n  const meetupIds = result.map((meetup) => {\r\n    return {\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    };\r\n  });\r\n\r\n  return {\r\n    fallback: true,\r\n    paths: meetupIds,\r\n  };\r\n}\r\nexport async function getStaticProps(context) {\r\n  const { meetupId } = context.params;\r\n\r\n  const uri =\r\n    \"mongodb+srv://kamel:kamel123@cluster0.gs4eovp.mongodb.net/meetups?retryWrites=true&w=majority\";\r\n  // Create a MongoClient with a MongoClientOptions object to set the Stable API version\r\n  const client = new MongoClient(uri, {\r\n    serverApi: {\r\n      version: \"1\",\r\n      strict: true,\r\n      deprecationErrors: true,\r\n    },\r\n  });\r\n  await client.connect();\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n  const result = await meetupCollection.findOne({ _id: ObjectId(meetupId) });\r\n\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetup: { ...result, id: result._id.toString(), _id: null },\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}