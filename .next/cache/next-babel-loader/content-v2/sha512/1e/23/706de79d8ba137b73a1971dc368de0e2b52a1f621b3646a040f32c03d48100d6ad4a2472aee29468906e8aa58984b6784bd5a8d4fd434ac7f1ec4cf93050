{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from \"mongodb\";\nimport Head from \"next/head\";\nexport default function HomePage(props) {\n  console.log(props.meetups);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"React Meetups\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"Meetup with amazing people\"\n      })]\n    }), /*#__PURE__*/_jsx(MeetupList, {\n      meetups: props.meetups\n    })]\n  });\n}\nexport async function getServerSideProps(context) {\n  const req = context.req;\n  const res = context.res;\n  const data = req.body;\n  const uri = \"mongodb+srv://kamel:kamel123@cluster0.gs4eovp.mongodb.net/meetups?retryWrites=true&w=majority\"; // Create a MongoClient with a MongoClientOptions object to set the Stable API version\n\n  const client = new MongoClient(uri, {\n    serverApi: {\n      version: \"1\",\n      strict: true,\n      deprecationErrors: true\n    }\n  });\n  await client.connect();\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const result = await meetupCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: result.map(meetup => {\n        console.log(meetup.title);\n        console.log(meetup.title);\n        console.log(meetup._id.toString());\n        return _objectSpread(_objectSpread({}, meetup), {}, {\n          id: meetup._id.toString(),\n          _id: null\n        });\n      })\n    }\n  };\n} // export async function getStaticProps() {\n//   await new Promise((r) => setTimeout(r, 5000));\n//   console.log(\"waited\");\n//   return {\n//     props: {\n//       meetups: DUMMY_LIST,\n//       revalidate: 10,\n//     },\n//   };\n// }","map":null,"metadata":{},"sourceType":"module"}